{"ast":null,"code":"var _jsxFileName = \"/home/samuel/Desktop/traffic/traffic-visualize/frontend/src/components/TrafficMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { MapContainer, TileLayer } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet.heat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrafficMap = () => {\n  _s();\n  const mapRef = useRef();\n  const heatLayerRef = useRef();\n  const [points, setPoints] = useState([]);\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:3001');\n    ws.onopen = () => {\n      console.log('WebSocket connected');\n    };\n    ws.onmessage = event => {\n      const data = JSON.parse(event.data);\n      setPoints(data.points);\n    };\n    ws.onclose = () => {\n      console.log('WebSocket disconnected');\n    };\n    return () => ws.close();\n  }, []);\n  useEffect(() => {\n    if (mapRef.current && !heatLayerRef.current) {\n      heatLayerRef.current = L.heatLayer(points, {\n        radius: 25,\n        blur: 15,\n        maxZoom: 17\n      }).addTo(mapRef.current);\n    } else if (heatLayerRef.current) {\n      heatLayerRef.current.setLatLngs(points);\n    }\n  }, [points]);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [9.0, 38.75] // Addis Ababa\n    ,\n    zoom: 12,\n    style: {\n      height: '600px',\n      width: '100%'\n    },\n    whenCreated: map => {\n      mapRef.current = map;\n    },\n    children: /*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(TrafficMap, \"dqr9zqk+UbBdVS7nuwb7eTTv4E4=\");\n_c = TrafficMap;\nexport default TrafficMap;\nvar _c;\n$RefreshReg$(_c, \"TrafficMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","MapContainer","TileLayer","L","jsxDEV","_jsxDEV","TrafficMap","_s","mapRef","heatLayerRef","points","setPoints","ws","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","onclose","close","current","heatLayer","radius","blur","maxZoom","addTo","setLatLngs","center","zoom","style","height","width","whenCreated","map","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/samuel/Desktop/traffic/traffic-visualize/frontend/src/components/TrafficMap.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { MapContainer, TileLayer } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet.heat';\n\nconst TrafficMap = () => {\n  const mapRef = useRef();\n  const heatLayerRef = useRef();\n  const [points, setPoints] = useState([]);\n\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:3001');\n\n    ws.onopen = () => {\n      console.log('WebSocket connected');\n    };\n\n    ws.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      setPoints(data.points);\n    };\n\n    ws.onclose = () => {\n      console.log('WebSocket disconnected');\n    };\n\n    return () => ws.close();\n  }, []);\n\n  useEffect(() => {\n    if (mapRef.current && !heatLayerRef.current) {\n      heatLayerRef.current = L.heatLayer(points, {\n        radius: 25,\n        blur: 15,\n        maxZoom: 17,\n      }).addTo(mapRef.current);\n    } else if (heatLayerRef.current) {\n      heatLayerRef.current.setLatLngs(points);\n    }\n  }, [points]);\n\n  return (\n    <MapContainer\n      center={[9.0, 38.75]} // Addis Ababa\n      zoom={12}\n      style={{ height: '600px', width: '100%' }}\n      whenCreated={map => { mapRef.current = map; }}\n    >\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      />\n    </MapContainer>\n  );\n};\n\nexport default TrafficMap;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,YAAY,EAAEC,SAAS,QAAQ,eAAe;AACvD,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,MAAM,GAAGT,MAAM,CAAC,CAAC;EACvB,MAAMU,YAAY,GAAGV,MAAM,CAAC,CAAC;EAC7B,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExCF,SAAS,CAAC,MAAM;IACd,MAAMc,EAAE,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IAE/CD,EAAE,CAACE,MAAM,GAAG,MAAM;MAChBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC,CAAC;IAEDJ,EAAE,CAACK,SAAS,GAAIC,KAAK,IAAK;MACxB,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;MACnCR,SAAS,CAACQ,IAAI,CAACT,MAAM,CAAC;IACxB,CAAC;IAEDE,EAAE,CAACU,OAAO,GAAG,MAAM;MACjBP,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACvC,CAAC;IAED,OAAO,MAAMJ,EAAE,CAACW,KAAK,CAAC,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAENzB,SAAS,CAAC,MAAM;IACd,IAAIU,MAAM,CAACgB,OAAO,IAAI,CAACf,YAAY,CAACe,OAAO,EAAE;MAC3Cf,YAAY,CAACe,OAAO,GAAGrB,CAAC,CAACsB,SAAS,CAACf,MAAM,EAAE;QACzCgB,MAAM,EAAE,EAAE;QACVC,IAAI,EAAE,EAAE;QACRC,OAAO,EAAE;MACX,CAAC,CAAC,CAACC,KAAK,CAACrB,MAAM,CAACgB,OAAO,CAAC;IAC1B,CAAC,MAAM,IAAIf,YAAY,CAACe,OAAO,EAAE;MAC/Bf,YAAY,CAACe,OAAO,CAACM,UAAU,CAACpB,MAAM,CAAC;IACzC;EACF,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,oBACEL,OAAA,CAACJ,YAAY;IACX8B,MAAM,EAAE,CAAC,GAAG,EAAE,KAAK,CAAE,CAAC;IAAA;IACtBC,IAAI,EAAE,EAAG;IACTC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAC1CC,WAAW,EAAEC,GAAG,IAAI;MAAE7B,MAAM,CAACgB,OAAO,GAAGa,GAAG;IAAE,CAAE;IAAAC,QAAA,eAE9CjC,OAAA,CAACH,SAAS;MACRqC,GAAG,EAAC,oDAAoD;MACxDC,WAAW,EAAC;IAAyF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEnB,CAAC;AAACrC,EAAA,CAjDID,UAAU;AAAAuC,EAAA,GAAVvC,UAAU;AAmDhB,eAAeA,UAAU;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}